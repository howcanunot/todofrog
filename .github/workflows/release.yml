name: Build and Publish Docker Image with todofrog bot

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-html
        pip install -r requirements.txt
    
    - name: Run tests with coverage
      run: |
        pytest --cov=./ --cov-report=xml --cov-report=html --html=test-results/report.html --junitxml=test-results/junit.xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: howcanunot/todofrog
        fail_ci_if_error: true

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Generate Docker tags
      id: docker_meta
      run: echo "tags=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Log in to Yandex Container Registry
      run: |
        docker login -u oauth \
          --password "${{ secrets.YANDEX_CLOUD_OAUTH }}" \
          cr.yandex

    - name: Build Docker image
      run: |
        docker build -t todofrog:latest .

    - name: Tag Docker image
      run: |
        docker tag todofrog:latest cr.yandex/${{ secrets.REGISTRY_ID }}/todofrog:latest

    - name: Push Docker image
      run: |
        docker push cr.yandex/${{ secrets.YANDEX_CLOUD_ID }}/${{ secrets.YANDEX_REGISTRY_NAME }}/my-app:${{ steps.docker_meta.outputs.tags }}

    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v2

    # - name: Build and push
    #   uses: docker/build-push-action@v4
    #   with:
    #     context: .
    #     push: true
    #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/todofrog:${{ steps.docker_meta.outputs.tags }}
